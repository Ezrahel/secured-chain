// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package db

import (
	"net/netip"

	"github.com/jackc/pgx/v5/pgtype"
)

type AuthAuditLog struct {
	ID           int64              `json:"id"`
	UserID       pgtype.UUID        `json:"user_id"`
	EventType    string             `json:"event_type"`
	EventPayload []byte             `json:"event_payload"`
	OccurredAt   pgtype.Timestamptz `json:"occurred_at"`
	IpAddress    *netip.Addr        `json:"ip_address"`
	UserAgent    pgtype.Text        `json:"user_agent"`
	PrevHash     []byte             `json:"prev_hash"`
	Hash         []byte             `json:"hash"`
}

type AuthToken struct {
	ID                pgtype.UUID        `json:"id"`
	UserID            pgtype.UUID        `json:"user_id"`
	TokenHash         []byte             `json:"token_hash"`
	DeviceID          pgtype.Text        `json:"device_id"`
	IpAddress         *netip.Addr        `json:"ip_address"`
	UserAgent         pgtype.Text        `json:"user_agent"`
	CreatedAt         pgtype.Timestamptz `json:"created_at"`
	ExpiresAt         pgtype.Timestamptz `json:"expires_at"`
	RevokedAt         pgtype.Timestamptz `json:"revoked_at"`
	RotateCount       pgtype.Int4        `json:"rotate_count"`
	LastSeenAt        pgtype.Timestamptz `json:"last_seen_at"`
	DeviceFingerprint pgtype.Text        `json:"device_fingerprint"`
}

type EmailToken struct {
	ID        pgtype.UUID        `json:"id"`
	UserID    pgtype.UUID        `json:"user_id"`
	TokenHash []byte             `json:"token_hash"`
	Purpose   string             `json:"purpose"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	ExpiresAt pgtype.Timestamptz `json:"expires_at"`
	UsedAt    pgtype.Timestamptz `json:"used_at"`
	IpAddress *netip.Addr        `json:"ip_address"`
	UserAgent pgtype.Text        `json:"user_agent"`
}

type FailedLoginAttempt struct {
	ID              pgtype.UUID        `json:"id"`
	IpAddress       netip.Addr         `json:"ip_address"`
	UsernameOrEmail string             `json:"username_or_email"`
	AttemptedAt     pgtype.Timestamptz `json:"attempted_at"`
	UserAgent       pgtype.Text        `json:"user_agent"`
}

type MfaSecret struct {
	ID                   pgtype.UUID        `json:"id"`
	UserID               pgtype.UUID        `json:"user_id"`
	SecretEncrypted      []byte             `json:"secret_encrypted"`
	BackupCodesEncrypted []byte             `json:"backup_codes_encrypted"`
	Enabled              pgtype.Bool        `json:"enabled"`
	CreatedAt            pgtype.Timestamptz `json:"created_at"`
	LastUsedAt           pgtype.Timestamptz `json:"last_used_at"`
}

type User struct {
	ID                  pgtype.UUID        `json:"id"`
	Fullname            string             `json:"fullname"`
	Username            string             `json:"username"`
	Email               string             `json:"email"`
	EmailVerified       pgtype.Bool        `json:"email_verified"`
	PasswordHash        []byte             `json:"password_hash"`
	PasswordAlgo        string             `json:"password_algo"`
	CreatedAt           pgtype.Timestamptz `json:"created_at"`
	UpdatedAt           pgtype.Timestamptz `json:"updated_at"`
	Disabled            pgtype.Bool        `json:"disabled"`
	FailedLoginAttempts pgtype.Int4        `json:"failed_login_attempts"`
	LockedUntil         pgtype.Timestamptz `json:"locked_until"`
	Metadata            []byte             `json:"metadata"`
}

type WebauthnCredential struct {
	ID              pgtype.UUID        `json:"id"`
	UserID          pgtype.UUID        `json:"user_id"`
	CredentialID    []byte             `json:"credential_id"`
	PublicKey       []byte             `json:"public_key"`
	AttestationType string             `json:"attestation_type"`
	Aaguid          pgtype.UUID        `json:"aaguid"`
	SignCount       pgtype.Int8        `json:"sign_count"`
	CloneWarning    pgtype.Bool        `json:"clone_warning"`
	CreatedAt       pgtype.Timestamptz `json:"created_at"`
	LastUsedAt      pgtype.Timestamptz `json:"last_used_at"`
	Name            string             `json:"name"`
}
